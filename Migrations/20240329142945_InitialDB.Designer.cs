// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(BaseAdminContext))]
    [Migration("20240329142945_InitialDB")]
    partial class InitialDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API.Models.Sys_Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "RoleName" }, "rolename_idx")
                        .IsUnique();

                    b.ToTable("Sys_Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleDescription = "Role for SuperAdmin",
                            RoleName = "SuperAdmin",
                            UpdateBy = "System",
                            UpdateTime = new DateTime(2024, 3, 29, 21, 29, 44, 125, DateTimeKind.Local).AddTicks(9866)
                        },
                        new
                        {
                            Id = 2,
                            CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleDescription = "Role for Admin",
                            RoleName = "Admin",
                            UpdateBy = "System",
                            UpdateTime = new DateTime(2024, 3, 29, 21, 29, 44, 125, DateTimeKind.Local).AddTicks(9874)
                        },
                        new
                        {
                            Id = 3,
                            CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleDescription = "Role for User",
                            RoleName = "User",
                            UpdateBy = "System",
                            UpdateTime = new DateTime(2024, 3, 29, 21, 29, 44, 125, DateTimeKind.Local).AddTicks(9893)
                        });
                });

            modelBuilder.Entity("API.Models.Sys_User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<byte?>("Education")
                        .HasColumnType("tinyint");

                    b.Property<string>("Email")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mobile")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserName" }, "name_idx")
                        .IsUnique();

                    b.ToTable("Sys_User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Avatar = "",
                            CreateTime = new DateTime(2024, 3, 29, 21, 29, 44, 125, DateTimeKind.Local).AddTicks(8772),
                            DepartmentId = 15,
                            Education = (byte)3,
                            Email = "superadmin@gmail.com",
                            FullName = "Nguyễn Khanh Tùng",
                            IsActive = true,
                            LastLoginTime = new DateTime(2024, 3, 28, 22, 1, 2, 0, DateTimeKind.Unspecified),
                            Mobile = "0338716085",
                            PasswordHash = new byte[] { 172, 84, 0, 53, 65, 191, 231, 109, 13, 172, 251, 106, 30, 248, 76, 197, 222, 218, 245, 120, 33, 214, 75, 10, 139, 13, 179, 37, 112, 13, 0, 120, 68, 123, 152, 131, 186, 134, 171, 142, 108, 84, 100, 111, 137, 42, 216, 133, 11, 156, 48, 92, 97, 188, 0, 29, 51, 25, 12, 229, 208, 202, 195, 177 },
                            PasswordSalt = new byte[] { 103, 156, 76, 20, 132, 58, 219, 231, 124, 87, 125, 41, 36, 249, 117, 74, 84, 105, 216, 192, 203, 198, 116, 19, 28, 121, 178, 239, 33, 193, 108, 34, 173, 94, 122, 221, 92, 134, 2, 134, 12, 103, 158, 251, 154, 27, 153, 71, 70, 164, 177, 177, 110, 209, 254, 13, 111, 105, 217, 143, 11, 44, 233, 248, 214, 58, 203, 59, 13, 145, 95, 42, 181, 132, 97, 134, 232, 33, 54, 146, 245, 77, 80, 89, 208, 175, 207, 96, 236, 205, 169, 121, 159, 195, 118, 34, 127, 5, 119, 230, 250, 171, 177, 172, 148, 212, 232, 73, 200, 104, 171, 156, 136, 122, 173, 92, 53, 11, 7, 141, 189, 225, 152, 112, 56, 97, 124, 118 },
                            Sex = 1,
                            UpdateBy = "System",
                            UpdateTime = new DateTime(2024, 3, 29, 21, 29, 44, 125, DateTimeKind.Local).AddTicks(8784),
                            UserName = "superadmin"
                        },
                        new
                        {
                            Id = 2,
                            Avatar = "",
                            CreateTime = new DateTime(2024, 3, 29, 21, 29, 44, 125, DateTimeKind.Local).AddTicks(8806),
                            DepartmentId = 29,
                            Education = (byte)3,
                            Email = "superadmin@gmail.com",
                            FullName = "Nguyễn Khanh Tùng",
                            IsActive = true,
                            LastLoginTime = new DateTime(2024, 3, 28, 22, 1, 2, 0, DateTimeKind.Unspecified),
                            Mobile = "0338716085",
                            PasswordHash = new byte[] { 172, 84, 0, 53, 65, 191, 231, 109, 13, 172, 251, 106, 30, 248, 76, 197, 222, 218, 245, 120, 33, 214, 75, 10, 139, 13, 179, 37, 112, 13, 0, 120, 68, 123, 152, 131, 186, 134, 171, 142, 108, 84, 100, 111, 137, 42, 216, 133, 11, 156, 48, 92, 97, 188, 0, 29, 51, 25, 12, 229, 208, 202, 195, 177 },
                            PasswordSalt = new byte[] { 103, 156, 76, 20, 132, 58, 219, 231, 124, 87, 125, 41, 36, 249, 117, 74, 84, 105, 216, 192, 203, 198, 116, 19, 28, 121, 178, 239, 33, 193, 108, 34, 173, 94, 122, 221, 92, 134, 2, 134, 12, 103, 158, 251, 154, 27, 153, 71, 70, 164, 177, 177, 110, 209, 254, 13, 111, 105, 217, 143, 11, 44, 233, 248, 214, 58, 203, 59, 13, 145, 95, 42, 181, 132, 97, 134, 232, 33, 54, 146, 245, 77, 80, 89, 208, 175, 207, 96, 236, 205, 169, 121, 159, 195, 118, 34, 127, 5, 119, 230, 250, 171, 177, 172, 148, 212, 232, 73, 200, 104, 171, 156, 136, 122, 173, 92, 53, 11, 7, 141, 189, 225, 152, 112, 56, 97, 124, 118 },
                            Sex = 1,
                            UpdateBy = "System",
                            UpdateTime = new DateTime(2024, 3, 29, 21, 29, 44, 125, DateTimeKind.Local).AddTicks(8808),
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 3,
                            Avatar = "",
                            CreateTime = new DateTime(2024, 3, 29, 21, 29, 44, 125, DateTimeKind.Local).AddTicks(8824),
                            DepartmentId = 17,
                            Education = (byte)3,
                            Email = "superadmin@gmail.com",
                            FullName = "Nguyễn Thanh Trung",
                            IsActive = true,
                            LastLoginTime = new DateTime(2024, 3, 28, 22, 1, 2, 0, DateTimeKind.Unspecified),
                            Mobile = "0338716085",
                            PasswordHash = new byte[] { 172, 84, 0, 53, 65, 191, 231, 109, 13, 172, 251, 106, 30, 248, 76, 197, 222, 218, 245, 120, 33, 214, 75, 10, 139, 13, 179, 37, 112, 13, 0, 120, 68, 123, 152, 131, 186, 134, 171, 142, 108, 84, 100, 111, 137, 42, 216, 133, 11, 156, 48, 92, 97, 188, 0, 29, 51, 25, 12, 229, 208, 202, 195, 177 },
                            PasswordSalt = new byte[] { 103, 156, 76, 20, 132, 58, 219, 231, 124, 87, 125, 41, 36, 249, 117, 74, 84, 105, 216, 192, 203, 198, 116, 19, 28, 121, 178, 239, 33, 193, 108, 34, 173, 94, 122, 221, 92, 134, 2, 134, 12, 103, 158, 251, 154, 27, 153, 71, 70, 164, 177, 177, 110, 209, 254, 13, 111, 105, 217, 143, 11, 44, 233, 248, 214, 58, 203, 59, 13, 145, 95, 42, 181, 132, 97, 134, 232, 33, 54, 146, 245, 77, 80, 89, 208, 175, 207, 96, 236, 205, 169, 121, 159, 195, 118, 34, 127, 5, 119, 230, 250, 171, 177, 172, 148, 212, 232, 73, 200, 104, 171, 156, 136, 122, 173, 92, 53, 11, 7, 141, 189, 225, 152, 112, 56, 97, 124, 118 },
                            Sex = 0,
                            UpdateBy = "System",
                            UpdateTime = new DateTime(2024, 3, 29, 21, 29, 44, 125, DateTimeKind.Local).AddTicks(8825),
                            UserName = "user"
                        });
                });

            modelBuilder.Entity("API.Models.Sys_User_Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("Sys_User_Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            RoleId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            RoleId = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            RoleId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            RoleId = 3,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("API.Models.Sys_Role", b =>
                {
                    b.HasOne("API.Models.Sys_User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("API.Models.Sys_User_Role", b =>
                {
                    b.HasOne("API.Models.Sys_Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("API.Models.Sys_User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("API.Models.Sys_Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("API.Models.Sys_User", b =>
                {
                    b.Navigation("Roles");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
