// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(BaseAdminContext))]
    [Migration("20240329092955_AddTable")]
    partial class AddTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API.Models.Sys_Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "RoleName" }, "rolename_idx")
                        .IsUnique();

                    b.ToTable("Sys_Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleDescription = "Role for SuperAdmin",
                            RoleName = "SuperAdmin",
                            UpdateBy = "System",
                            UpdateTime = new DateTime(2024, 3, 29, 16, 29, 54, 985, DateTimeKind.Local).AddTicks(4909)
                        },
                        new
                        {
                            Id = 2,
                            CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleDescription = "Role for Admin",
                            RoleName = "Admin",
                            UpdateBy = "System",
                            UpdateTime = new DateTime(2024, 3, 29, 16, 29, 54, 985, DateTimeKind.Local).AddTicks(4911)
                        },
                        new
                        {
                            Id = 3,
                            CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleDescription = "Role for User",
                            RoleName = "User",
                            UpdateBy = "System",
                            UpdateTime = new DateTime(2024, 3, 29, 16, 29, 54, 985, DateTimeKind.Local).AddTicks(4912)
                        });
                });

            modelBuilder.Entity("API.Models.Sys_User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<byte?>("Education")
                        .HasColumnType("tinyint");

                    b.Property<string>("Email")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mobile")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserName" }, "name_idx")
                        .IsUnique();

                    b.ToTable("Sys_User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Avatar = "",
                            CreateTime = new DateTime(2024, 3, 29, 16, 29, 54, 985, DateTimeKind.Local).AddTicks(4624),
                            DepartmentId = 15,
                            Education = (byte)3,
                            Email = "superadmin@gmail.com",
                            FullName = "Nguyễn Khanh Tùng",
                            IsActive = true,
                            LastLoginTime = new DateTime(2024, 3, 28, 22, 1, 2, 0, DateTimeKind.Unspecified),
                            Mobile = "0338716085",
                            PasswordHash = new byte[] { 238, 186, 156, 111, 96, 221, 124, 224, 77, 109, 56, 117, 239, 246, 150, 102, 14, 205, 48, 67, 111, 253, 98, 101, 112, 133, 212, 219, 7, 41, 219, 74, 156, 244, 82, 149, 185, 118, 187, 174, 112, 81, 50, 149, 248, 58, 91, 192, 159, 140, 24, 167, 167, 68, 30, 211, 193, 244, 121, 88, 225, 156, 183, 94 },
                            PasswordSalt = new byte[] { 242, 112, 199, 13, 248, 151, 103, 245, 119, 53, 85, 164, 145, 110, 211, 75, 204, 250, 32, 208, 41, 190, 161, 104, 220, 174, 254, 73, 21, 201, 193, 35, 134, 239, 168, 156, 67, 55, 159, 194, 178, 232, 8, 66, 131, 244, 61, 166, 162, 218, 28, 1, 213, 254, 96, 50, 83, 60, 202, 88, 132, 186, 137, 228, 158, 239, 213, 120, 21, 175, 178, 92, 23, 255, 61, 4, 1, 156, 176, 16, 21, 207, 15, 23, 125, 197, 241, 230, 52, 250, 71, 176, 115, 65, 26, 89, 61, 170, 253, 171, 72, 109, 87, 56, 6, 224, 221, 41, 68, 233, 102, 238, 111, 218, 74, 39, 110, 91, 43, 147, 57, 47, 24, 250, 17, 33, 214, 178 },
                            Sex = 1,
                            UpdateBy = "System",
                            UpdateTime = new DateTime(2024, 3, 29, 16, 29, 54, 985, DateTimeKind.Local).AddTicks(4635),
                            UserName = "superadmin"
                        },
                        new
                        {
                            Id = 2,
                            Avatar = "",
                            CreateTime = new DateTime(2024, 3, 29, 16, 29, 54, 985, DateTimeKind.Local).AddTicks(4644),
                            DepartmentId = 29,
                            Education = (byte)3,
                            Email = "superadmin@gmail.com",
                            FullName = "Nguyễn Khanh Tùng",
                            IsActive = true,
                            LastLoginTime = new DateTime(2024, 3, 28, 22, 1, 2, 0, DateTimeKind.Unspecified),
                            Mobile = "0338716085",
                            PasswordHash = new byte[] { 238, 186, 156, 111, 96, 221, 124, 224, 77, 109, 56, 117, 239, 246, 150, 102, 14, 205, 48, 67, 111, 253, 98, 101, 112, 133, 212, 219, 7, 41, 219, 74, 156, 244, 82, 149, 185, 118, 187, 174, 112, 81, 50, 149, 248, 58, 91, 192, 159, 140, 24, 167, 167, 68, 30, 211, 193, 244, 121, 88, 225, 156, 183, 94 },
                            PasswordSalt = new byte[] { 242, 112, 199, 13, 248, 151, 103, 245, 119, 53, 85, 164, 145, 110, 211, 75, 204, 250, 32, 208, 41, 190, 161, 104, 220, 174, 254, 73, 21, 201, 193, 35, 134, 239, 168, 156, 67, 55, 159, 194, 178, 232, 8, 66, 131, 244, 61, 166, 162, 218, 28, 1, 213, 254, 96, 50, 83, 60, 202, 88, 132, 186, 137, 228, 158, 239, 213, 120, 21, 175, 178, 92, 23, 255, 61, 4, 1, 156, 176, 16, 21, 207, 15, 23, 125, 197, 241, 230, 52, 250, 71, 176, 115, 65, 26, 89, 61, 170, 253, 171, 72, 109, 87, 56, 6, 224, 221, 41, 68, 233, 102, 238, 111, 218, 74, 39, 110, 91, 43, 147, 57, 47, 24, 250, 17, 33, 214, 178 },
                            Sex = 1,
                            UpdateBy = "System",
                            UpdateTime = new DateTime(2024, 3, 29, 16, 29, 54, 985, DateTimeKind.Local).AddTicks(4645),
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 3,
                            Avatar = "",
                            CreateTime = new DateTime(2024, 3, 29, 16, 29, 54, 985, DateTimeKind.Local).AddTicks(4651),
                            DepartmentId = 17,
                            Education = (byte)3,
                            Email = "superadmin@gmail.com",
                            FullName = "Nguyễn Thanh Trung",
                            IsActive = true,
                            LastLoginTime = new DateTime(2024, 3, 28, 22, 1, 2, 0, DateTimeKind.Unspecified),
                            Mobile = "0338716085",
                            PasswordHash = new byte[] { 238, 186, 156, 111, 96, 221, 124, 224, 77, 109, 56, 117, 239, 246, 150, 102, 14, 205, 48, 67, 111, 253, 98, 101, 112, 133, 212, 219, 7, 41, 219, 74, 156, 244, 82, 149, 185, 118, 187, 174, 112, 81, 50, 149, 248, 58, 91, 192, 159, 140, 24, 167, 167, 68, 30, 211, 193, 244, 121, 88, 225, 156, 183, 94 },
                            PasswordSalt = new byte[] { 242, 112, 199, 13, 248, 151, 103, 245, 119, 53, 85, 164, 145, 110, 211, 75, 204, 250, 32, 208, 41, 190, 161, 104, 220, 174, 254, 73, 21, 201, 193, 35, 134, 239, 168, 156, 67, 55, 159, 194, 178, 232, 8, 66, 131, 244, 61, 166, 162, 218, 28, 1, 213, 254, 96, 50, 83, 60, 202, 88, 132, 186, 137, 228, 158, 239, 213, 120, 21, 175, 178, 92, 23, 255, 61, 4, 1, 156, 176, 16, 21, 207, 15, 23, 125, 197, 241, 230, 52, 250, 71, 176, 115, 65, 26, 89, 61, 170, 253, 171, 72, 109, 87, 56, 6, 224, 221, 41, 68, 233, 102, 238, 111, 218, 74, 39, 110, 91, 43, 147, 57, 47, 24, 250, 17, 33, 214, 178 },
                            Sex = 0,
                            UpdateBy = "System",
                            UpdateTime = new DateTime(2024, 3, 29, 16, 29, 54, 985, DateTimeKind.Local).AddTicks(4652),
                            UserName = "user"
                        });
                });

            modelBuilder.Entity("API.Models.Sys_User_Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sys_User_Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            RoleId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            RoleId = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            RoleId = 1,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            RoleId = 1,
                            UserId = 5
                        });
                });

            modelBuilder.Entity("API.Models.Sys_Role", b =>
                {
                    b.HasOne("API.Models.Sys_User", "User")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("API.Models.Sys_User_Role", b =>
                {
                    b.HasOne("API.Models.Sys_Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.Sys_User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("API.Models.Sys_Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("API.Models.Sys_User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
